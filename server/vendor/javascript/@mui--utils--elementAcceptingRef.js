import e from"prop-types";import n from"@mui/utils/chainPropTypes";function isClassComponent(e){const{prototype:n={}}=e;return Boolean(n.isReactComponent)}function acceptingRef(e,n,t,o,i){const r=e[n];const p=i||n;if(r==null||typeof window==="undefined")return null;let a;const c=r.type;typeof c!=="function"||isClassComponent(c)||(a="Did you accidentally use a plain function component for an element instead?");return a!==void 0?new Error(`Invalid ${o} \`${p}\` supplied to \`${t}\`. Expected an element that can hold a ref. ${a} For more information see https://mui.com/r/caveat-with-refs-guide`):null}const t=n(e.element,acceptingRef);t.isRequired=n(e.element.isRequired,acceptingRef);export{t as default};

