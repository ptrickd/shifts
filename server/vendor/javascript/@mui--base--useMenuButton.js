import e from"@babel/runtime/helpers/esm/extends";import*as o from"react";import{unstable_useForkRef as t}from"@mui/utils";import{D as n}from"../_/JZazQOKh.js";import{D as r}from"../_/_aJ6rGLG.js";import{u as s}from"../_/iqBLHrl4.js";import{c as a}from"../_/1TTNQAt_.js";import{extractEventHandlers as i}from"@mui/base/utils";import"../_/q-ZiAH4M.js";"use client";function useMenuButton(u={}){const{disabled:l=false,focusableWhenDisabled:p,rootRef:c}=u;const m=o.useContext(n);if(m===null)throw new Error("useMenuButton: no menu context available.");const{state:f,dispatch:d,registerTrigger:b,popupId:v}=m;const{getRootProps:D,rootRef:g,active:h}=s({disabled:l,focusableWhenDisabled:p,rootRef:c});const w=t(g,b);const createHandleClick=e=>o=>{var t;(t=e.onClick)==null||t.call(e,o);o.defaultMuiPrevented||d({type:r.toggle,event:o})};const createHandleKeyDown=e=>o=>{var t;(t=e.onKeyDown)==null||t.call(e,o);if(!o.defaultMuiPrevented&&(o.key==="ArrowDown"||o.key==="ArrowUp")){o.preventDefault();d({type:r.open,event:o})}};const getOwnRootProps=(e={})=>({onClick:createHandleClick(e),onKeyDown:createHandleKeyDown(e)});const getRootProps=(o={})=>{const t=i(o);const n=a(D,getOwnRootProps);return e({"aria-haspopup":"menu","aria-expanded":f.open,"aria-controls":v},o,t,n(t),{tabIndex:0,ref:w})};return{active:h,getRootProps:getRootProps,open:f.open,rootRef:w}}"use client";export{useMenuButton};

