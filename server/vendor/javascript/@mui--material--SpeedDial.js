import e from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import o from"@babel/runtime/helpers/esm/extends";import*as t from"react";import{isFragment as n}from"react-is";import r from"prop-types";import i from"clsx";import{unstable_composeClasses as s}from"@mui/base/composeClasses";import a from"../styles/styled.js";import c from"../styles/useThemeProps.js";import l from"../styles/useTheme.js";import p from"@mui/material/Zoom";import u from"@mui/material/Fab";import"../utils/capitalize.js";import"../_/FB7W9PUV.js";import"../_/rIOChER5.js";import"../_/Djcx4Nd1.js";import{unstable_generateUtilityClasses as m,unstable_capitalize as d,unstable_useControlled as f,unstable_useForkRef as y,unstable_isMuiElement as g}from"@mui/utils";import b from"@mui/material/generateUtilityClass";import{jsx as h,jsxs as v}from"react/jsx-runtime";import"@mui/system";import"../styles/defaultTheme.js";import"../styles/createTheme.js";import"../styles/createMixins.js";import"../styles/createPalette.js";import"../colors/common.js";import"../colors/grey.js";import"../colors/purple.js";import"../colors/red.js";import"../colors/orange.js";import"../colors/blue.js";import"../colors/lightBlue.js";import"../colors/green.js";import"../styles/createTypography.js";import"../styles/shadows.js";import"../styles/createTransitions.js";import"../styles/zIndex.js";import"../_/f7-_1gIZ.js";function getSpeedDialUtilityClass(e){return b("MuiSpeedDial",e)}const D=m("MuiSpeedDial",["root","fab","directionUp","directionDown","directionLeft","directionRight","actions","actionsClosed"]);"use client";const j=["ref"],T=["ariaLabel","FabProps","children","className","direction","hidden","icon","onBlur","onClose","onFocus","onKeyDown","onMouseEnter","onMouseLeave","onOpen","open","openIcon","TransitionComponent","transitionDuration","TransitionProps"],w=["ref"];const useUtilityClasses=e=>{const{classes:o,open:t,direction:n}=e;const r={root:["root",`direction${d(n)}`],fab:["fab"],actions:["actions",!t&&"actionsClosed"]};return s(r,getSpeedDialUtilityClass,o)};function getOrientation(e){return e==="up"||e==="down"?"vertical":e==="right"||e==="left"?"horizontal":void 0}function clamp(e,o,t){return e<o?o:e>t?t:e}const x=32;const C=16;const S=a("div",{name:"MuiSpeedDial",slot:"Root",overridesResolver:(e,o)=>{const{ownerState:t}=e;return[o.root,o[`direction${d(t.direction)}`]]}})((({theme:e,ownerState:t})=>o({zIndex:(e.vars||e).zIndex.speedDial,display:"flex",alignItems:"center",pointerEvents:"none"},t.direction==="up"&&{flexDirection:"column-reverse",[`& .${D.actions}`]:{flexDirection:"column-reverse",marginBottom:-x,paddingBottom:C+x}},t.direction==="down"&&{flexDirection:"column",[`& .${D.actions}`]:{flexDirection:"column",marginTop:-x,paddingTop:C+x}},t.direction==="left"&&{flexDirection:"row-reverse",[`& .${D.actions}`]:{flexDirection:"row-reverse",marginRight:-x,paddingRight:C+x}},t.direction==="right"&&{flexDirection:"row",[`& .${D.actions}`]:{flexDirection:"row",marginLeft:-x,paddingLeft:C+x}})));const E=a(u,{name:"MuiSpeedDial",slot:"Fab",overridesResolver:(e,o)=>o.fab})((()=>({pointerEvents:"auto"})));const O=a("div",{name:"MuiSpeedDial",slot:"Actions",overridesResolver:(e,o)=>{const{ownerState:t}=e;return[o.actions,!t.open&&o.actionsClosed]}})((({ownerState:e})=>o({display:"flex",pointerEvents:"auto"},!e.open&&{transition:"top 0s linear 0.2s",pointerEvents:"none"})));const M=t.forwardRef((function SpeedDial(r,s){const a=c({props:r,name:"MuiSpeedDial"});const u=l();const m={enter:u.transitions.duration.enteringScreen,exit:u.transitions.duration.leavingScreen};const{ariaLabel:d,FabProps:{ref:b}={},children:D,className:x,direction:C="up",hidden:M=false,icon:P,onBlur:F,onClose:L,onFocus:R,onKeyDown:N,onMouseEnter:$,onMouseLeave:I,onOpen:B,open:k,TransitionComponent:z=p,transitionDuration:U=m,TransitionProps:_}=a,K=e(a.FabProps,j),V=e(a,T);const[A,q]=f({controlled:k,default:false,name:"SpeedDial",state:"open"});const W=o({},a,{open:A,direction:C});const Z=useUtilityClasses(W);const G=t.useRef();t.useEffect((()=>()=>{clearTimeout(G.current)}),[]);const H=t.useRef(0);
/**
   * pressing this key while the focus is on a child SpeedDialAction focuses
   * the next SpeedDialAction.
   * It is equal to the first arrow key pressed while focus is on the SpeedDial
   * that is not orthogonal to the direction.
   * @type {utils.ArrowKey?}
   */const J=t.useRef();
/**
   * refs to the Button that have an action associated to them in this SpeedDial
   * [Fab, ...(SpeedDialActions > Button)]
   * @type {HTMLButtonElement[]}
   */const Q=t.useRef([]);Q.current=[Q.current[0]];const X=t.useCallback((e=>{Q.current[0]=e}),[]);const Y=y(b,X);
/**
   * creates a ref callback for the Button in a SpeedDialAction
   * Is called before the original ref callback for Button that was set in buttonProps
   *
   * @param dialActionIndex {number}
   * @param origButtonRef {React.RefObject?}
   */const createHandleSpeedDialActionButtonRef=(e,o)=>t=>{Q.current[e+1]=t;o&&o(t)};const handleKeyDown=e=>{N&&N(e);const o=e.key.replace("Arrow","").toLowerCase();const{current:t=o}=J;if(e.key!=="Escape"){if(getOrientation(o)===getOrientation(t)&&getOrientation(o)!==void 0){e.preventDefault();const n=o===t?1:-1;const r=clamp(H.current+n,0,Q.current.length-1);Q.current[r].focus();H.current=r;J.current=t}}else{q(false);Q.current[0].focus();L&&L(e,"escapeKeyDown")}};t.useEffect((()=>{if(!A){H.current=0;J.current=void 0}}),[A]);const handleClose=e=>{e.type==="mouseleave"&&I&&I(e);e.type==="blur"&&F&&F(e);clearTimeout(G.current);if(e.type==="blur")G.current=setTimeout((()=>{q(false);L&&L(e,"blur")}));else{q(false);L&&L(e,"mouseLeave")}};const handleClick=e=>{K.onClick&&K.onClick(e);clearTimeout(G.current);if(A){q(false);L&&L(e,"toggle")}else{q(true);B&&B(e,"toggle")}};const handleOpen=e=>{e.type==="mouseenter"&&$&&$(e);e.type==="focus"&&R&&R(e);clearTimeout(G.current);A||(G.current=setTimeout((()=>{q(true);if(B){const o={focus:"focus",mouseenter:"mouseEnter"};B(e,o[e.type])}})))};const ee=d.replace(/^[^a-z]+|[^\w:.-]+/gi,"");const oe=t.Children.toArray(D).filter((e=>{process.env.NODE_ENV!=="production"&&n(e)&&console.error(["MUI: The SpeedDial component doesn't accept a Fragment as a child.","Consider providing an array instead."].join("\n"));return t.isValidElement(e)}));const te=oe.map(((n,r)=>{const i=n.props,{FabProps:{ref:s}={},tooltipPlacement:a}=i,c=e(i.FabProps,w);const l=a||(getOrientation(C)==="vertical"?"left":"top");return t.cloneElement(n,{FabProps:o({},c,{ref:createHandleSpeedDialActionButtonRef(r,s)}),delay:30*(A?r:oe.length-r),open:A,tooltipPlacement:l,id:`${ee}-action-${r}`})}));return v(S,o({className:i(Z.root,x),ref:s,role:"presentation",onKeyDown:handleKeyDown,onBlur:handleClose,onFocus:handleOpen,onMouseEnter:handleOpen,onMouseLeave:handleClose,ownerState:W},V,{children:[h(z,o({in:!M,timeout:U,unmountOnExit:true},_,{children:h(E,o({color:"primary","aria-label":d,"aria-haspopup":"true","aria-expanded":A,"aria-controls":`${ee}-actions`},K,{onClick:handleClick,className:i(Z.fab,K.className),ref:Y,ownerState:W,children:t.isValidElement(P)&&g(P,["SpeedDialIcon"])?t.cloneElement(P,{open:A}):P}))})),h(O,{id:`${ee}-actions`,role:"menu","aria-orientation":getOrientation(C),className:i(Z.actions,!A&&Z.actionsClosed),ownerState:W,children:te})]}))}));process.env.NODE_ENV!=="production"?M.propTypes={ariaLabel:r.string.isRequired,children:r.node,classes:r.object,className:r.string,direction:r.oneOf(["down","left","right","up"]),FabProps:r.object,hidden:r.bool,icon:r.node,onBlur:r.func,
/**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"toggle"`, `"blur"`, `"mouseLeave"`, `"escapeKeyDown"`.
   */
onClose:r.func,onFocus:r.func,onKeyDown:r.func,onMouseEnter:r.func,onMouseLeave:r.func,
/**
   * Callback fired when the component requests to be open.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"toggle"`, `"focus"`, `"mouseEnter"`.
   */
onOpen:r.func,open:r.bool,openIcon:r.node,sx:r.oneOfType([r.arrayOf(r.oneOfType([r.func,r.object,r.bool])),r.func,r.object]),TransitionComponent:r.elementType,transitionDuration:r.oneOfType([r.number,r.shape({appear:r.number,enter:r.number,exit:r.number})]),TransitionProps:r.object}:void 0;"use client";export{M as default,getSpeedDialUtilityClass,D as speedDialClasses};

