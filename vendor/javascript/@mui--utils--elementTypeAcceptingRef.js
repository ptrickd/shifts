import e from"prop-types";import n from"@mui/utils/chainPropTypes";function isClassComponent(e){const{prototype:n={}}=e;return Boolean(n.isReactComponent)}function elementTypeAcceptingRef(e,n,t,o,i){const p=e[n];const r=i||n;if(p==null||typeof window==="undefined")return null;let l;typeof p!=="function"||isClassComponent(p)||(l="Did you accidentally provide a plain function component instead?");return l!==void 0?new Error(`Invalid ${o} \`${r}\` supplied to \`${t}\`. Expected an element type that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`):null}var t=n(e.elementType,elementTypeAcceptingRef);export{t as default};

