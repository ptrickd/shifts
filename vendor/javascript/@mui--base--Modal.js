import o from"@babel/runtime/helpers/esm/extends";import e from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import*as s from"react";import t from"prop-types";import{elementAcceptingRef as r,HTMLElementType as n}from"@mui/utils";import{useSlotProps as l}from"@mui/base/utils";import{useClassNamesOverride as i}from"../utils/ClassNameConfigurator.js";import{unstable_composeClasses as a}from"@mui/base/composeClasses";import{Portal as c}from"@mui/base/Portal";import{unstable_useModal as d}from"@mui/base/unstable_useModal";import{FocusTrap as p}from"@mui/base/FocusTrap";import{generateUtilityClasses as u}from"@mui/base/generateUtilityClasses";import{generateUtilityClass as b}from"@mui/base/generateUtilityClass";import{jsx as f,jsxs as m}from"react/jsx-runtime";function getModalUtilityClass(o){return b("MuiModal",o)}const k=u("MuiModal",["root","hidden","backdrop"]);"use client";const E=["children","closeAfterTransition","container","disableAutoFocus","disableEnforceFocus","disableEscapeKeyDown","disablePortal","disableRestoreFocus","disableScrollLock","hideBackdrop","keepMounted","onBackdropClick","onClose","onKeyDown","open","onTransitionEnter","onTransitionExited","slotProps","slots"];const useUtilityClasses=o=>{const{open:e,exited:s}=o;const t={root:["root",!e&&s&&"hidden"],backdrop:["backdrop"]};return a(t,i(getModalUtilityClass))};const T=s.forwardRef((function Modal(t,r){var n;const{children:i,closeAfterTransition:a=false,container:u,disableAutoFocus:b=false,disableEnforceFocus:k=false,disableEscapeKeyDown:T=false,disablePortal:h=false,disableRestoreFocus:y=false,disableScrollLock:P=false,hideBackdrop:F=false,keepMounted:C=false,onBackdropClick:x,open:M,slotProps:g={},slots:R={}}=t,S=e(t,E);const w=o({},t,{closeAfterTransition:a,disableAutoFocus:b,disableEnforceFocus:k,disableEscapeKeyDown:T,disablePortal:h,disableRestoreFocus:y,disableScrollLock:P,hideBackdrop:F,keepMounted:C});const{getRootProps:A,getBackdropProps:B,getTransitionProps:D,portalRef:j,isTopModal:v,exited:K,hasTransition:L}=d(o({},w,{rootRef:r}));const N=o({},w,{exited:K,hasTransition:L});const U=useUtilityClasses(N);const O={};i.props.tabIndex===void 0&&(O.tabIndex="-1");if(L){const{onEnter:o,onExited:e}=D();O.onEnter=o;O.onExited=e}const q=(n=R.root)!=null?n:"div";const I=l({elementType:q,externalSlotProps:g.root,externalForwardedProps:S,getSlotProps:A,className:U.root,ownerState:N});const _=R.backdrop;const V=l({elementType:_,externalSlotProps:g.backdrop,getSlotProps:e=>B(o({},e,{onClick:o=>{x&&x(o);e!=null&&e.onClick&&e.onClick(o)}})),className:U.backdrop,ownerState:N});return C||M||L&&!K?f(c,{ref:j,container:u,disablePortal:h,children:m(q,o({},I,{children:[!F&&_?f(_,o({},V)):null,f(p,{disableEnforceFocus:k,disableAutoFocus:b,disableRestoreFocus:y,isEnabled:v,open:M,children:s.cloneElement(i,O)})]}))}):null}));process.env.NODE_ENV!=="production"?T.propTypes={children:r.isRequired,closeAfterTransition:t.bool,container:t/* @typescript-to-proptypes-ignore */.oneOfType([n,t.func]),disableAutoFocus:t.bool,disableEnforceFocus:t.bool,disableEscapeKeyDown:t.bool,disablePortal:t.bool,disableRestoreFocus:t.bool,disableScrollLock:t.bool,hideBackdrop:t.bool,keepMounted:t.bool,
/**
   * Callback fired when the backdrop is clicked.
   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.
   */
onBackdropClick:t.func,
/**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
onClose:t.func,onTransitionEnter:t.func,onTransitionExited:t.func,open:t.bool.isRequired,slotProps:t.shape({backdrop:t.oneOfType([t.func,t.object]),root:t.oneOfType([t.func,t.object])}),slots:t.shape({backdrop:t.elementType,root:t.elementType})}:void 0;export{T as Modal,getModalUtilityClass,k as modalClasses};

